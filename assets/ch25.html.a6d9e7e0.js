import{_ as i}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as h,c as l,a as o,w as n,e as s,b as e,d as t,r}from"./app.887b133c.js";const u={},c=s('<h1 id="chap25-layers-and-boundaries-\u5C42\u6B21\u4E0E\u8FB9\u754C" tabindex="-1"><a class="header-anchor" href="#chap25-layers-and-boundaries-\u5C42\u6B21\u4E0E\u8FB9\u754C" aria-hidden="true">#</a> Chap25. LAYERS AND BOUNDARIES \u5C42\u6B21\u4E0E\u8FB9\u754C</h1><p>It is easy to think of systems as being composed of three components: UI, business rules, and database. For some simple systems, this is sufficient. For most systems, though, the number of components is larger than that.</p><blockquote><p>\u4EBA\u4EEC\u901A\u5E38\u4E60\u60EF\u4E8E\u5C06\u7CFB\u7EDF\u5206\u6210\u4E09\u4E2A\u7EC4\u4EF6\uFF1AUI\u3001\u4E1A\u52A1\u903B\u8F91\u548C\u6570\u636E\u5E93\u3002\u5BF9\u4E8E\u4E00\u4E9B\u7B80\u5355\u7CFB\u7EDF\u6765\u8BF4\uFF0C\u7684\u786E\u53EF\u4EE5\u8FD9\u6837\uFF0C\u4F46\u7A0D\u590D\u6742\u4E00\u4E9B\u7CFB\u7EDF\u7684\u7EC4\u4EF6\u5C31\u8FDC\u4E0D\u6B62\u4E09\u4E2A\u4E86\u3002</p></blockquote><p>Consider, for example, a simple computer game. It is easy to imagine the three components. The UI handles all messages from the player to the game rules. The game rules store the state of the game in some kind of persistent data structure. But is that all there is?</p><blockquote><p>\u4EE5\u4E00\u4E2A\u7B80\u5355\u7684\u8BA1\u7B97\u673A\u6E38\u620F\u4E3A\u4F8B\u3002\u7C97\u7565\u770B\u6765\uFF0C\u5B83\u597D\u50CF\u4E5F\u5F88\u7B26\u5408\u4E09\u4E2A\u7EC4\u4EF6\u7684\u67B6\u6784\u8BBE\u5B9A\u3002\u9996\u5148\uFF0C\u8BA9 UI \u8D1F\u8D23\u63A5\u6536\u7528\u6237\u8F93\u5165\u7684\u6570\u636E\uFF0C\u5E76\u5C06\u6570\u636E\u4F20\u9012\u7ED9\u6E38\u620F\u7684\u4E1A\u52A1\u903B\u8F91\u3002\u7136\u540E\uFF0C\u6E38\u620F\u7684\u4E1A\u52A1\u903B\u8F91\u4F1A\u5C06\u6E38\u620F\u72B6\u6001\u4FDD\u5B58\u5728\u67D0\u79CD\u6301\u4E45\u5316\u6570\u636E\u7ED3\u6784\u4E2D\u3002\u4F46\u662F\uFF0C\u4EC5\u4EC5\u662F\u8FD9\u6837\u800C\u5DF2\u5417\uFF1F</p></blockquote><h2 id="hunt-the-wumpus-\u57FA\u4E8E\u6587\u672C\u7684\u5192\u9669\u6E38\u620F-hunt-the-wumpus" tabindex="-1"><a class="header-anchor" href="#hunt-the-wumpus-\u57FA\u4E8E\u6587\u672C\u7684\u5192\u9669\u6E38\u620F-hunt-the-wumpus" aria-hidden="true">#</a> HUNT THE WUMPUS \u57FA\u4E8E\u6587\u672C\u7684\u5192\u9669\u6E38\u620F\uFF1AHunt The Wumpus</h2><p>Let\u2019s put some flesh on these bones. Let\u2019s assume that the game is the venerable Hunt the Wumpus adventure game from 1972. This text-based game uses very simple commands like GO EAST and SHOOT WEST. The player enters a command, and the computer responds with what the player sees, smells, hears, and experiences. The player is hunting for a Wumpus in a system of caverns, and must avoid traps, pits, and other dangers lying in wait. If you are interested, the rules of the game are easy to find on the web.</p><blockquote><p>\u73B0\u5728\u8BA9\u6211\u4EEC\u5F80\u4E0A\u9762\u7684\u8BBE\u60F3\u4E2D\u52A0\u5165\u4E00\u4E9B\u7EC6\u8282\u3002\u5047\u8BBE\u8FD9\u4E2A\u6E38\u620F\u662F 1972 \u5E74\u98CE\u9761\u4E00\u65F6\u7684\u57FA\u4E8E\u6587\u672C\u7684\u5192\u9669\u6E38\u620F\uFF1AHunt the Wumpus \u8FD9\u4E2A\u6E38\u620F\u7684\u64CD\u4F5C\u662F\u901A\u8FC7\u4E00\u4E9B\u50CF GO EAST \u548C SHOOT WEST \u8FD9\u6837\u7684\u7B80\u5355\u6587\u5B57\u547D\u4EE4\u6765\u5B8C\u6210\u7684\u3002\u73A9\u5BB6\u5728\u8F93\u5165\u547D\u4EE4\u4E4B\u540E\uFF0C\u8BA1\u7B97\u673A\u5C31\u4F1A\u8FD4\u56DE\u73A9\u5BB6\u89D2\u8272\u6240\u770B\u5230\u7684\u3001\u95FB\u5230\u7684\u3001\u542C\u5230\u7684\u6216\u4F53\u4F1A\u5230\u7684\u4E8B\u60C5\u3002\u5728\u8FD9\u4E2A\u6E38\u620F\u4E2D\uFF0C\u73A9\u5BB6\u4F1A\u5728\u4E00\u7CFB\u5217\u6D1E\u7A74\u4E2D\u8FFD\u6355 Wumpus\u3002\u73A9\u5BB6\u5FC5\u987B\u907F\u5F00\u9677\u9631\u3001\u9677\u5751\u4EE5\u53CA\u5176\u4ED6\u4E00\u7CFB\u5217\u5371\u9669\u3002\u5982\u679C\u6709\u5174\u8DA3\uFF0C\u5728\u7F51\u4E0A\u5F88\u5BB9\u6613\u627E\u5230\u8BE5\u6E38\u620F\u7684\u89C4\u5219\u8BF4\u660E\u3002</p></blockquote><p>Let\u2019s assume that we\u2019ll keep the text-based UI, but decouple it from the game rules so that our version can use different languages in different markets. The game rules will communicate with the UI component using a language-independent API, and the UI will translate the API into the appropriate human language.</p><blockquote><p>\u73B0\u5728\uFF0C\u5047\u8BBE\u6211\u4EEC\u51B3\u5B9A\u4FDD\u7559\u8FD9\u79CD\u57FA\u4E8E\u6587\u672C\u7684 UI\uFF0C\u4F46\u662F\u9700\u8981\u5C06 UI \u4E0E\u6E38\u620F\u4E1A\u52A1\u903B\u8F91\u4E4B\u95F4\u7684\u8026\u5408\u89E3\u5F00\uFF0C\u4EE5\u4FBF\u6211\u4EEC\u7684\u6E38\u620F\u7248\u672C\u53EF\u4EE5\u5728\u4E0D\u540C\u5730\u533A\u4F7F\u7528\u4E0D\u540C\u7684\u8BED\u8A00\u3002\u4E5F\u5C31\u662F\u8BF4\uFF0C\u6E38\u620F\u7684\u4E1A\u52A1\u903B\u8F91\u4E0E UI \u4E4B\u95F4\u5E94\u8BE5\u7528\u4E00\u79CD\u4E0E\u81EA\u7136\u8BED\u8A00\u65E0\u5173\u7684 API \u6765\u8FDB\u884C\u901A\u4FE1\uFF0C\u800C\u7531 UI \u8D1F\u8D23\u5C06 API \u4F20\u9012\u8FDB\u6765\u7684\u4FE1\u606F\u8F6C\u6362\u6210\u5408\u9002\u7684\u81EA\u7136\u8BED\u8A00\u3002</p></blockquote><p>If the source code dependencies are properly managed, as shown in Figure 25.1, then any number of UI components can reuse the same game rules. The game rules do not know, nor do they care, which human language is being used.</p><blockquote><p>\u5982\u679C\u6211\u4EEC\u80FD\u7BA1\u7406\u597D\u6E90\u7801\u4E2D\u7684\u4F9D\u8D56\u5173\u7CFB\uFF0C\u5C31\u5E94\u8BE5\u50CF\u56FE 25.1 \u6240\u5C55\u793A\u7684\u90A3\u6837\uFF0C\u591A\u4E2A UI \u7EC4\u4EF6\u590D\u7528\u540C\u4E00\u5957\u6E38\u620F\u4E1A\u52A1\u903B\u8F91\u3002\u800C\u6E38\u620F\u7684\u4E1A\u52A1\u903B\u8F91\u7EC4\u4EF6\u4E0D\u77E5\u9053\uFF0C\u4E5F\u4E0D\u5FC5\u77E5\u9053 UI \u6B63\u5728\u4F7F\u7528\u54EA\u4E00\u79CD\u81EA\u7136\u8BED\u8A00\u3002</p></blockquote>',12),d=t("Any number of UI components can reuse the game rules"),p=e("p",null,"Let\u2019s also assume that the state of the game is maintained on some persistent store\u2014perhaps in flash, or perhaps in the cloud, or maybe just in RAM. In any of those cases, we don\u2019t want the game rules to know the details. So, again, we\u2019ll create an API that the game rules can use to communicate with the data storage component.",-1),m=e("blockquote",null,[e("p",null,"\u540C\u65F6\uFF0C\u5047\u8BBE\u73A9\u5BB6\u5728\u6E38\u620F\u4E2D\u7684\u72B6\u6001\u4F1A\u88AB\u4FDD\u5B58\u5728\u67D0\u79CD\u6301\u4E45\u5316\u5B58\u50A8\u4ECB\u8D28\u4E2D\u2014\u2014\u6709\u53EF\u80FD\u95EA\u5B58\uFF0C\u4E5F\u6709\u53EF\u80FD\u662F\u67D0\u79CD\u4E91\u7AEF\u5B58\u50A8\uFF0C\u6216\u53EA\u662F\u672C\u673A\u5185\u5B58\u3002\u65E0\u8BBA\u600E\u6837\uFF0C\u6211\u4EEC\u90FD\u5E76\u4E0D\u5E0C\u671B\u6E38\u620F\u5F15\u64CE\u4E86\u89E3\u8FD9\u4E9B\u7EC6\u8282\u3002\u6240\u4EE5\uFF0C\u6211\u4EEC\u4ECD\u7136\u9700\u8981\u521B\u5EFA\u4E00\u4E2A API \u6765\u8D1F\u8D23\u6E38\u620F\u7684\u4E1A\u52A1\u903B\u8F91\u7EC4\u4EF6\u4E0E\u6570\u636E\u5B58\u50A8\u7EC4\u4EF6\u4E4B\u95F4\u7684\u901A\u4FE1\u3002")],-1),g=e("p",null,"We don\u2019t want the game rules to know anything about the different kinds of data storage, so the dependencies have to be properly directed following the Dependency Rule, as shown in Figure 25.2.",-1),b=e("blockquote",null,[e("p",null,"\u7531\u4E8E\u6211\u4EEC\u4E0D\u4F1A\u5E0C\u671B\u8BA9\u6E38\u620F\u7684\u4E1A\u52A1\u903B\u8F91\u4F9D\u8D56\u4E8E\u4E0D\u540C\u79CD\u7C7B\u7684\u6570\u636E\u5B58\u50A8\uFF0C\u6240\u4EE5\u8FD9\u91CC\u7684\u8BBE\u8BA1\u4E5F\u8981\u5408\u7406\u5730\u9075\u5B88\u4F9D\u8D56\u5173\u7CFB\u539F\u5219\uFF0C\u8FD9\u6837\u7684\u8BDD\uFF0C\u8BE5\u6E38\u620F\u7684\u7ED3\u6784\u5E94\u5982\u56FE 25.2 \u6240\u793A\u3002")],-1),y=t("Following the Dependency Rule"),f=e("h2",{id:"clean-architecture-\u53EF\u5426\u91C7\u7528\u6574\u6D01\u67B6\u6784",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#clean-architecture-\u53EF\u5426\u91C7\u7528\u6574\u6D01\u67B6\u6784","aria-hidden":"true"},"#"),t(" CLEAN ARCHITECTURE? \u53EF\u5426\u91C7\u7528\u6574\u6D01\u67B6\u6784")],-1),w=e("p",null,"It should be clear that we could easily apply the clean architecture approach in this context,1 with all the use cases, boundaries, entities, and corresponding data structures. But have we really found all the significant architectural boundaries?",-1),k=e("blockquote",null,[e("p",null,"\u5F88\u663E\u7136\uFF0C\u8FD9\u91CC\u5177\u5907\u4E86\u91C7\u7528\u6574\u6D01\u67B6\u6784\u65B9\u6CD5\u6240\u9700\u8981\u7684\u2014\u5207\uFF0C\u5305\u62EC\u7528\u4F8B\u3001\u4E1A\u52A1\u5B9E\u4F53\u4EE5\u53CA\u5BF9\u5E94\u7684\u6570\u636E\u7ED3\u6784\u90FD\u6709\u4E86\uFF0C\u4F46\u6211\u4EEC\u662F\u5426\u5DF2\u7ECF\u627E\u5230\u4E86\u6240\u6709\u76F8\u5E94\u7684\u67B6\u6784\u8FB9\u754C\u5462\uFF1F")],-1),v=e("p",null,"For example, language is not the only axis of change for the UI. We also might want to vary the mechanism by which we communicate the text. For example, we might want to use a normal shell window, or text messages, or a chat application. There are many different possibilities.",-1),_=e("blockquote",null,[e("p",null,"\u4F8B\u5982\uFF0C\u8BED\u8A00\u5E76\u4E0D\u662F UI \u53D8\u66F4\u7684\u552F\u4E00\u65B9\u5411\u3002\u6211\u4EEC\u53EF\u80FD\u8FD8\u4F1A\u9700\u8981\u53D8\u66F4\u6587\u5B57\u8F93\u5165/\u8F93\u51FA\u7684\u65B9\u5F0F\u3002\u4F8B\u5982\u6211\u4EEC\u7684\u8F93\u5165/\u8F93\u51FA\u53EF\u4EE5\u91C7\u7528\u547D\u4EE4\u884C\u7A97\u53E3\uFF0C\u6216\u8005\u7528\u77ED\u4FE1\u606F\uFF0C\u6216\u8005\u91C7\u7528\u67D0\u79CD\u804A\u5929\u7A0B\u5E8F\u3002\u8FD9\u91CC\u7684\u53EF\u80FD\u6027\u6709\u5F88\u591A\u3002")],-1),I=e("p",null,"That means that there is a potential architectural boundary defined by this axis of change. Perhaps we should construct an API that crosses that boundary and isolates the language from the communications mechanism; that idea is illustrated in Figure 25.3.",-1),q=e("blockquote",null,[e("p",null,"\u8FD9\u5C31\u610F\u5473\u7740\u8FD9\u7C7B\u53D8\u66F4\u5E94\u8BE5\u6709\u4E00\u4E2A\u5BF9\u5E94\u7684\u67B6\u6784\u8FB9\u754C\u3002\u4E5F\u8BB8\u6211\u4EEC\u9700\u8981\u6784\u9020\u4E00\u4E2A API\uFF0C\u4EE5\u4FBF\u5C06\u8BED\u8A00\u90E8\u5206\u4E0E\u901A\u4FE1\u90E8\u5206\u9694\u5F00\uFF0C\u8FD9\u6837\u4E00\u6765\uFF0C\u8BE5\u8BBE\u8BA1\u7684\u7ED3\u6784\u5E94\u5982\u56FE 25.3 \u6240\u793A\u3002")],-1),T=t("The revised diagram"),A=s("<p>The diagram in Figure 25.3 has gotten a little complicated, but should contain no surprises. The dashed outlines indicate abstract components that define an API that is implemented by the components above or below them. For example, the Language API is implemented by English and Spanish.</p><blockquote><p>\u5728\u56FE 25.3 \u4E2D\u53EF\u4EE5\u770B\u5230\uFF0C\u73B0\u5728\u7CFB\u7EDF\u7684\u7ED3\u6784\u5DF2\u7ECF\u53D8\u5F97\u6709\u70B9\u590D\u6742\u4E86\u3002\u5728\u8BE5\u56FE\u4E2D\uFF0C\u865A\u7EBF\u6846\u4EE3\u8868\u7684\u662F\u62BD\u8C61\u7EC4\u4EF6\uFF0C\u5B83\u4EEC\u6240\u5B9A\u4E49\u7684 API \u901A\u5E38\u8981\u4EA4\u7531\u5176\u4E0A\u4E0B\u5C42\u7684\u7EC4\u4EF6\u6765\u5B9E\u73B0\u3002\u4F8B\u5982 Language \u90E8\u5206\u7684 API \u662F\u7531 English \u548C Spanish \u8FD9\u4E24\u4E2A\u7EC4\u4EF6\u6765\u5B9E\u73B0\u7684\u3002</p></blockquote><p>GameRules communicates with Language through an API that GameRules defines and Language implements. Language communicates with TextDelivery using an API that Language defines but TextDelivery implements. The API is defined and owned by the user, rather than by the implementer.</p><blockquote><p>\u6211\u4EEC\u4E5F\u53EF\u4EE5\u770B\u5230 GameRules \u4E0E Language \u8FD9\u4E24\u4E2A\u7EC4\u4EF6\u4E4B\u95F4\u7684\u4EA4\u4E92\u662F\u901A\u8FC7\u4E00\u4E2A\u7531 GameRules \u5B9A\u4E49\uFF0C\u5E76\u7531 Language \u5B9E\u73B0\u7684 API \u6765\u5B8C\u6210\u7684\u3002\u540C\u6837\u7684\uFF0CLanguage \u4E0E TextDelievery \u4E4B\u95F4\u7684\u4EA4\u4E92\u4E5F\u662F\u901A\u8FC7\u7531 Language \u5B9A\u4E49\uFF0C\u5E76\u7531 TextDelievery \u5B9E\u73B0\u7684 API \u6765\u5B8C\u6210\u3002\u8FD9\u4E9B API \u7684\u5B9A\u4E49\u548C\u7EF4\u62A4\u90FD\u662F\u7531\u4F7F\u7528\u65B9\u6765\u8D1F\u8D23\u7684\uFF0C\u800C\u975E\u5B9E\u73B0\u65B9\u3002</p></blockquote><p>If we were to look inside GameRules, we would find polymorphic Boundary interfaces used by the code inside GameRules and implemented by the code inside the Language component. We would also find polymorphic Boundary interfaces used by Language and implemented by code inside GameRules.</p><blockquote><p>\u5982\u679C\u6211\u4EEC\u8FDB\u4E00\u6B65\u67E5\u770B GameRules \u5185\u90E8\uFF0C\u5C31\u4F1A\u53D1\u73B0 GameRules \u7EC4\u4EF6\u7684\u4EE3\u7801\u4E2D\u4F7F\u7528\u7684 Boundary \u591A\u6001\u63A5\u53E3\u662F\u7531 Language \u7EC4\u4EF6\u6765\u5B9E\u73B0\u7684\uFF1B\u540C\u65F6\u8FD8\u4F1A\u53D1\u73B0 Language \u7EC4\u4EF6\u4F7F\u7528\u7684 Boundary \u591A\u6001\u63A5\u53E3\u7531 GameRules \u4EE3\u7801\u5B9E\u73B0\u3002</p></blockquote><p>If we were to look inside of Language, we would find the same thing: Polymorphic Boundary interfaces implemented by the code inside TextDelivery, and polymorphic Boundary interfaces used by TextDelivery and implemented by Language.</p><blockquote><p>\u5982\u679C\u518D\u63A2\u7A76\u4E00\u4E0B Language \u7EC4\u4EF6\uFF0C\u6211\u4EEC\u4E5F\u4F1A\u770B\u5230\u7C7B\u4F3C\u7684\u60C5\u51B5\uFF1A\u5B83\u7684 Boundary \u591A\u6001\u63A5\u53E3\u662F\u5728 TextDelievery \u7EC4\u4EF6\u7684\u4EE3\u7801\u4E2D\u5B9E\u73B0\u7684\uFF0C\u800C TextDelievery \u4F7F\u7528\u7684 Boundary \u591A\u6001\u63A5\u53E3\u5219\u7531 Language \u6765\u5B9E\u73B0\u3002</p></blockquote><p>In each case, the API defined by those Boundary interfaces is owned by the upstream component.</p><blockquote><p>\u5728\u6240\u6709\u8FD9\u4E9B\u573A\u666F\u4E2D\uFF0C\u7531 Boundary \u63A5\u53E3\u6240\u5B9A\u4E49\u7684 API \u90FD\u662F\u7531\u5176\u4F7F\u7528\u8005\u7684\u4E0A\u4E00\u5C42\u7EC4\u4EF6\u8D1F\u8D23\u7EF4\u62A4\u7684\u3002</p></blockquote><p>The variations, such as English, SMS, and CloudData, are provided by polymorphic interfaces defined in the abstract API component, and implemented by the concrete components that serve them. For example, we would expect polymorphic interfaces defined in Language to be implemented by English and Spanish.</p><blockquote><p>\u4E0D\u540C\u7684\u5177\u4F53\u5B9E\u73B0\u7C7B\uFF0C\u4F8B\u5982 English\u3001SMS\u3001CloudData \u90FD\u5B9E\u73B0\u4E86\u7531\u62BD\u8C61\u7684 API \u7EC4\u4EF6\u6240\u5B9A\u4E49\u7684\u591A\u6001\u63A5\u53E3\u3002\u4F8B\u5982\uFF0CLanguage \u7EC4\u4EF6\u4E2D\u5B9A\u4E49\u7684\u591A\u6001\u63A5\u53E3\u662F\u7531 English \u548C Spanish \u8FD9\u4E24\u4E2A\u7EC4\u4EF6\u6765\u5B9A\u4E49\u7684\u3002</p></blockquote><p>We can simplify this diagram by eliminating all the variations and focusing on just the API components. Figure 25.4 shows this diagram.</p><blockquote><p>\u6211\u4EEC\u53EF\u4EE5\u53BB\u6389\u6240\u6709\u7684\u5177\u4F53\u5B9E\u73B0\u7C7B\uFF0C\u53EA\u4FDD\u7559 API \u7EC4\u4EF6\u6765\u8FDB\u4E00\u6B65\u7B80\u5316\u4E0A\u9762\u8FD9\u5F20\u8BBE\u8BA1\u56FE\uFF0C\u5176\u7B80\u5316\u7684\u7ED3\u679C\u5982\u56FE 25.4 \u6240\u793A\u3002</p></blockquote>",14),x=t("Simplified diagram"),P=s('<p>Notice that the diagram is oriented in Figure 25.4 so that all the arrows point up. This puts GameRules at the top. This orientation makes sense because GameRules is the component that contains the highest-level policies.</p><blockquote><p>\u8BF7\u6CE8\u610F\u56FE 25.4 \u4E2D\u7684\u671D\u5411\u8BBE\u8BA1\uFF0C\u6240\u6709\u7684\u7BAD\u5934\u90FD\u662F\u671D\u4E0A\u7684\u3002\u8FD9\u6837 GameRules \u7EC4\u4EF6\u5C31\u88AB\u653E\u5728\u9876\u5C42\u7684\u4F4D\u7F6E\u3002\u8FD9\u79CD\u671D\u5411\u8BBE\u8BA1\u5F88\u597D\u5730\u53CD\u6620\u4E86 GameRules \u4F5C\u4E3A\u6700\u9AD8\u5C42\u7B56\u7565\u7EC4\u4EF6\u7684\u4E8B\u4E70\u3002</p></blockquote><p>Consider the direction of information flow. All input comes from the user through the TextDelivery component at the bottom left. That information rises through the Language component, getting translated into commands to GameRules. GameRules processes the user input and sends appropriate data down to DataStorage at the lower right.</p><blockquote><p>\u4E0B\u9762\uFF0C\u6211\u4EEC\u6765\u8003\u8651\u4E00\u4E9B\u4FE1\u606F\u6D41\u7684\u65B9\u5411\u3002\u9996\u5148\uFF0C\u6240\u6709\u6765\u81EA\u7528\u6237\u7684\u4FE1\u606F\u90FD\u4F1A\u901A\u8FC7\u5DE6\u4E0B\u89D2\u7684 TextDelievery \u7EC4\u4EF6\u4F20\u5165\u3002\u5F53\u8FD9\u4E9B\u4FE1\u606F\u88AB\u4E0A\u4F20\u5230 Language \u7EC4\u4EF6\u65F6\uFF0C\u5C31\u4F1A\u8F6C\u6362\u4E3A\u5177\u4F53\u7684\u547D\u4EE4\u8F93\u5165\u7ED9 GameRules \u7EC4\u4EF6\u3002\u7136\u540E\uFF0CGameRules \u7EC4\u4EF6\u4F1A\u8D1F\u8D23\u5904\u7406\u7528\u6237\u7684\u8F93\u5165\uFF0C\u5E76\u5C06\u6570\u636E\u53D1\u9001\u7ED9\u53F3\u4E0B\u89D2\u7684 Datastorage \u7EC4\u4EF6\u3002</p></blockquote><p>GameRules then sends output back down to Language, which translates the API back to the appropriate language and then delivers that language to the user through TextDelivery.</p><blockquote><p>\u63A5\u4E0B\u6765\uFF0CGameRules \u4F1A\u5C06\u8F93\u51FA\u5411\u4E0B\u4F20\u9012\u5230 Language \u7EC4\u4EF6\uFF0C\u5C06\u5176\u8F6C\u6210\u5408\u9002\u7684\u8BED\u8A00\u5E76\u901A\u8FC7 TextDJievery \u5C06\u8BE5\u8BED\u8A00\u4F20\u9012\u7ED9\u7528\u6237\u3002</p></blockquote><p>This organization effectively divides the flow of data into two streams.2 The stream on the left is concerned with communicating with the user, and the stream on the right is concerned with data persistence. Both streams meet at the top3 at GameRules, which is the ultimate processor of the data that goes through both streams.</p><blockquote><p>\u8FD9\u79CD\u8BBE\u8BA1\u65B9\u5F0F\u5C06\u6570\u636E\u6D41\u5206\u6210\u4E24\u8DEF\u3002\u5DE6\u4FA7\u7684\u6570\u636E\u6D41\u5173\u6CE8\u5982\u4F55\u4E0E\u7528\u6237\u901A\u4FE1\uFF0C\u800C\u53F3\u4FA7\u7684\u6570\u636E\u6D41\u5173\u6CE8\u7684\u662F\u6570\u636E\u6301\u4E45\u5316\u3002\u4E24\u6761\u6570\u636E\u6D41\u5728\u9876\u90E8\u7684 GameRules \u6C47\u805A\u3002GameRules \u7EC4\u4EF6\u662F\u6240\u6709\u6570\u636E\u7684\u6700\u7EC8\u5904\u7406\u8005\u3002</p></blockquote><h2 id="crossing-the-streams-\u4EA4\u6C47\u6570\u636E\u6D41" tabindex="-1"><a class="header-anchor" href="#crossing-the-streams-\u4EA4\u6C47\u6570\u636E\u6D41" aria-hidden="true">#</a> CROSSING THE STREAMS \u4EA4\u6C47\u6570\u636E\u6D41</h2><p>Are there always two data streams as in this example? No, not at all. Imagine that we would like to play Hunt the Wumpus on the net with multiple players. In this case, we would need a network component, like that shown in Figure 25.5. This organization divides the data flow into three streams, all controlled by the GameRules.</p><blockquote><p>\u90A3\u4E48\uFF0C\u8FD9\u4E2A\u4F8B\u5B50\u4E2D\u662F\u5426\u6C38\u8FDC\u53EA\u6709\u8FD9\u4E24\u6761\u6570\u636E\u6D41\u5462\uFF1F\u5F53\u7136\u4E0D\u662F\u3002\u5047\u8BBE\u6211\u4EEC\u73B0\u5728\u8981\u5728\u7F51\u7EDC\u4E0A\u4E0E\u591A\u4E2A\u5176\u4ED6\u73A9\u5BB6\u4E00\u8D77\u73A9\u8FD9\u4E2A\u6E38\u620F\uFF0C\u5C31\u4F1A\u9700\u8981\u4E00\u4E2A\u7F51\u7EDC\u7EC4\u4EF6\uFF0C\u5982\u56FE 25.5 \u6240\u793A\u3002\u8FD9\u6837\u4E00\u6765\uFF0C\u6211\u4EEC\u6709\u4E86\u4E09\u6761\u6570\u636E\u6D41\uFF0C\u5B83\u4EEC\u90FD\u7531 GameRules \u7EC4\u4EF6\u6240\u63A7\u5236\u3002</p></blockquote>',11),R=t("Adding a network component"),G=s('<p>So, as systems become more complex, the component structure may split into many such streams.</p><blockquote><p>\u7531\u6B64\u53EF\u89C1\uFF0C\u968F\u7740\u7CFB\u7EDF\u7684\u590D\u6742\u5316\uFF0C\u7EC4\u4EF6\u5728\u67B6\u6784\u4E2D\u81EA\u7136\u4F1A\u5206\u88C2\u51FA\u591A\u6761\u6570\u636E\u6D41\u6765\u3002</p></blockquote><h2 id="splitting-the-streams-\u6570\u636E\u6D41\u7684\u5206\u5272" tabindex="-1"><a class="header-anchor" href="#splitting-the-streams-\u6570\u636E\u6D41\u7684\u5206\u5272" aria-hidden="true">#</a> SPLITTING THE STREAMS \u6570\u636E\u6D41\u7684\u5206\u5272</h2><p>At this point you may be thinking that all the streams eventually meet at the top in a single component. If only life were so simple! The reality, of course, is much more complex.</p><blockquote><p>\u6B64\u65F6\u4F60\u53EF\u80FD\u4F1A\u8BA4\u4E3A\u6240\u6709\u7684\u6570\u636E\u6D41\u6700\u7EC8\u90FD\u4F1A\u6C47\u805A\u5230\u4E00\u4E2A\u7EC4\u4EF6\u4E0A\u3002\u751F\u6D3B\u8981\u662F\u679C\u771F\u5982\u6B64\u7B80\u5355\uFF0C\u90A3\u5C31\u771F\u662F\u592A\u597D\u4E86\uFF01\u73B0\u5B9E\u60C5\u51B5\u5F80\u5F80\u4E0D\u5982\u4EBA\u6240\u613F\u554A\u3002</p></blockquote><p>Consider the GameRules component for Hunt the Wumpus. Part of the game rules deal with the mechanics of the map. They know how the caverns are connected, and which objects are located in each cavern. They know how to move the player from cavern to cavern, and how to determine the events that the player must deal with.</p><blockquote><p>\u6211\u4EEC\u53EF\u4EE5\u518D\u6765\u770B\u4E00\u4E0B Hunt The Wumpu \u8FD9\u4E2A\u6E38\u620F\u7684 GameRules \u7EC4\u4EF6\u3002\u6E38\u620F\u7684\u90E8\u5206\u4E1A\u52A1\u903B\u8F91\u5904\u7406\u7684\u662F\u73A9\u5BB6\u5728\u5730\u56FE\u4E2D\u7684\u884C\u8D70\u3002\u8FD9\u4E00\u90E8\u5206\u9700\u8981\u77E5\u9053\u6E38\u620F\u4E2D\u7684\u6D1E\u7A74\u5982\u4F55\u76F8\u8FDE\uFF0C\u6BCF\u4E2A\u6D1E\u7A74\u4E2D\u6709\u4EC0\u4E48\u7269\u4F53\u5B58\u5728\uFF0C\u8FD8\u8981\u77E5\u9053\u5982\u4F55\u5C06\u73A9\u5BB6\u4ECE\u4E00\u4E2A\u6D1E\u7A74\u79FB\u5230\u53E6\u4E00\u4E2A\u6D1E\u7A74\uFF0C\u4EE5\u53CA\u5982\u4F55\u89E6\u53D1\u5404\u79CD\u9700\u8981\u73A9\u5BB6\u5904\u7406\u7684\u4E8B\u4EF6\u3002</p></blockquote><p>But there is another set of policies at an even higher level\u2014policies that know the health of the player, and the cost or benefit of a particular event. These policies could cause the player to gradually lose health, or to gain health by discovering food. The lower-level mechanics policy would declare events to this higher-level policy, such as FoundFood or FellInPit. The higher-level policy would then manage the state of the player (as shown in Figure 25.6). Eventually that policy would decide whether the player wins or loses.</p><blockquote><p>\u4F46\u662F\uFF0C\u6E38\u620F\u4E2D\u8FD8\u6709\u4E00\u7EC4\u66F4\u9AD8\u5C42\u6B21\u7684\u7B56\u7565\u2014\u2014\u8FD9\u4E9B\u7B56\u7565\u8D1F\u8D23\u4E86\u89E3\u73A9\u5BB6\u7684\u8840\u91CF\uFF0C\u4EE5\u53CA\u6BCF\u4E2A\u4E8B\u4EF6\u7684\u540E\u679C\u548C\u5F71\u54CD\u3002\u8FD9\u4E9B\u7B56\u7565\u65E2\u53EF\u4EE5\u8BA9\u73A9\u5BB6\u9010\u6E10\u635F\u5931\u8840\u91CF\uFF0C\u4E5F\u53EF\u80FD\u7531\u4E8E\u53D1\u73B0\u4E8B\u7269\u800C\u589E\u52A0\u8840\u91CF\u3002\u603B\u800C\u8A00\u4E4B\uFF0C\u6E38\u620F\u7684\u4F4E\u5C42\u7B56\u7565\u4F1A\u8D1F\u8D23\u5411\u9AD8\u5C42\u7B56\u7565\u4F20\u9012\u4E8B\u4EF6\uFF0C\u4F8B\u5982 FoundFood \u548C FelllnPito \u800C\u9AD8\u5C42\u7EC4\u4EF6\u5219\u8981\u7BA1\u7406\u73A9\u5BB6\u72B6\u6001\uFF08\u5982\u56FE 25.6 \u6240\u793A\uFF09\uFF0C\u6700\u7EC8\u8BE5\u7B56\u7565\u5C06\u4F1A\u51B3\u5B9A\u73A9\u5BB6\u5728\u6E38\u620F\u4E2D\u7684\u8F93\u8D62\u3002</p></blockquote>',9),L=t("The higher-level policy manages the player"),S=e("p",null,"Is this an architectural boundary? Do we need an API that separates MoveManagement from PlayerManagement? Well, let\u2019s make this a bit more interesting and add micro-services.",-1),M=e("blockquote",null,[e("p",null,"\u8FD9\u4E9B\u7A76\u7ADF\u662F\u5426\u5C5E\u4E8E\u67B6\u6784\u8FB9\u754C\u5462\uFF1F\u662F\u5426\u9700\u8981\u8BBE\u8BA1\u4E00\u4E2A API \u6765\u5206\u5272 MoveManagement \u548C PlayerManagement \u5462\uFF1F\u5728\u56DE\u7B54\u8FD9\u4E9B\u95EE\u9898\u4E4B\u524D\uFF0C\u8BA9\u6211\u4EEC\u628A\u95EE\u9898\u5F04\u5F97\u66F4\u6709\u610F\u601D\u4E00\u70B9\uFF0C\u518D\u5F80\u91CC\u9762\u52A0\u4E0A\u5FAE\u670D\u52A1\u5427\uFF01")],-1),F=e("p",null,"Let\u2019s assume that we\u2019ve got a massive multiplayer version of Hunt the Wumpus. MoveManagement is handled locally within the player\u2019s computer, but PlayerManagement is handled by a server. PlayerManagement offers a micro-service API to all the connected MoveManagement components.",-1),U=e("blockquote",null,[e("p",null,"\u5047\u8BBE\u6211\u4EEC\u73B0\u5728\u9762\u5BF9\u7684\u662F\u4E00\u4E2A\u53EF\u4EE5\u9762\u5411\u6D77\u91CF\u73A9\u5BB6\u7684\u65B0\u7248 Hurit The Wumpus \u6E38\u620F\u3002\u5B83\u7684 MoveManagmenet \u7EC4\u5408\u662F\u7531\u73A9\u5BB6\u7684\u672C\u5730\u8BA1\u7B97\u673A\u6765\u5904\u7406\u7684 \u3002\u800C PlayerManagement \u7EC4\u4EF6\u5219\u7531\u670D\u52A1\u7AEF\u6765\u5904\u7406\u3002\u4F46 PlayerManagement \u7EC4\u4EF6\u4F1A\u4E3A\u6240\u6709\u8FDE\u63A5\u4E0A\u5B83\u7684 MoveManagement \u7EC4\u4EF6\u63D0\u4F9B\u4E00\u4E2A\u5FAE\u670D\u52A1\u7684 API\u3002")],-1),E=e("p",null,"The diagram in Figure 25.7 depicts this scenario in a somewhat abbreviated fashion. The Network elements are a bit more complex than depicted\u2014but you can probably still get the idea. A full-fledged architectural boundary exists between MoveManagement and PlayerManagement in this case.",-1),W=e("blockquote",null,[e("p",null,"\u5728\u56FE 25.7 \u4E2D\uFF0C\u6211\u4EEC\u4E3A\u8BE5\u6E38\u620F\u7ED8\u5236\u4E86\u4E00\u4E2A\u7B80\u5316\u7248\u7684\u8BBE\u8BA1\u56FE\u3002\u73B0\u5B9E\u4E2D\u7684 Network \u7EC4\u4EF6\u901A\u5E38\u4F1A\u6BD4\u56FE\u4E2D\u7684\u66F4\u590D\u6742\u4E00\u4E9B \u4F46\u8FD9\u91CC\u7684\u5DF2\u7ECF\u8DB3\u591F\u8BF4\u660E\u60C5\u51B5\u4E86\u3002\u5728\u56FE\u4E2D\uFF0C\u53EF\u4EE5\u770B\u5230 MoveMangament PlayerManagment \u4E4B\u95F4\u5B58\u5728\u4E00\u4E2A\u5B8C\u6574\u7684\u7CFB\u7EDF\u67B6\u6784\u8FB9\u754C\u3002")],-1),D=t("Adding a micro-service API"),B=s('<h2 id="conclusion-\u672C\u7AE0\u5C0F\u7ED3" tabindex="-1"><a class="header-anchor" href="#conclusion-\u672C\u7AE0\u5C0F\u7ED3" aria-hidden="true">#</a> CONCLUSION \u672C\u7AE0\u5C0F\u7ED3</h2><p>What does all this mean? Why have I taken this absurdly simply program, which could be implemented in 200 lines of Kornshell, and extrapolated it out with all these crazy architectural boundaries?</p><blockquote><p>\u672C\u7AE0\u7A76\u7ADF\u60F3\u8BA8\u8BBA\u4EC0\u4E48\u5462\uFF1F\u4E3A\u4EC0\u4E48\u8981\u5C06\u4E00\u4E2A\u6781\u4E3A\u7B80\u5355\u7684\u3001\u5728 Komshell \u4E2D\u53EA\u9700 200 \u884C\u4EE3\u7801\u5C31\u80FD\u5199\u5B8C\u7684\u5C0F\u7A0B\u5E8F\u6269\u5C55\u6210\u5177\u6709\u8FD9\u4E9B\u7CFB\u7EDF\u67B6\u6784\u8FB9\u754C\u7684\u590D\u6742\u7A0B\u5E8F\uFF1F</p></blockquote><p>This example is intended to show that architectural boundaries exist everywhere. We, as architects, must be careful to recognize when they are needed. We also have to be aware that such boundaries, when fully implemented, are expensive. At the same time, we have to recognize that when such boundaries are ignored, they are very expensive to add in later\u2014even in the presence of comprehensive test-suites and refactoring discipline.</p><blockquote><p>\u6211\u4EEC\u8BBE\u8BA1\u8FD9\u4E2A\u4F8B\u5B50\u7684\u76EE\u7684\u5C31\u662F\u4E3A\u4E86\u8BC1\u660E\u67B6\u6784\u8FB9\u754C\u53EF\u4EE5\u5B58\u5728\u4E8E\u4EFB\u4F55\u5730\u65B9\u3002\u4F5C\u4E3A\u67B6\u6784\u5E08\uFF0C\u6211\u4EEC\u5FC5\u987B\u8981\u5C0F\u5FC3\u5BA1\u89C6\u7A76\u7ADF\u5728\u4EC0\u4E48\u5730\u65B9\u624D\u9700\u8981\u8BBE\u8BA1\u67B6\u6784\u8FB9\u754C\u3002\u53E6\u5916\uFF0C\u6211\u4EEC\u8FD8\u5FC5\u987B\u5F04\u6E05\u695A\u5B8C\u5168\u5B9E\u73B0\u8FD9\u4E9B\u8FB9\u754C\u5C06\u4F1A\u5E26\u6765\u591A\u5927\u7684\u6210\u672C\u3002\u540C\u65F6\uFF0C\u6211\u4EEC\u4E5F\u5FC5\u987B\u8981\u4E86\u89E3\u5982\u679C\u4E8B\u5148\u5FFD\u7565\u4E86\u8FD9\u4E9B\u8FB9\u754C\uFF0C\u540E\u7EED\u518D\u6DFB\u52A0\u4F1A\u6709\u591A\u4E48\u56F0\u96BE\u2014\u2014\u54EA\u6015\u6709\u8986\u76D6\u5E7F\u6CDB\u7684\u6D4B\u8BD5\uFF0C\u4E25\u52A0\u5C0F\u5FC3\u7684\u91CD\u6784\u4E5F\u4E8E\u4E8B\u65E0\u8865\u3002</p></blockquote><p>So what do we do, we architects? The answer is dissatisfying. On the one hand, some very smart people have told us, over the years, that we should not anticipate the need for abstraction. This is the philosophy of YAGNI: \u201CYou aren\u2019t going to need it.\u201D There is wisdom in this message, since over-engineering is often much worse than under-engineering. On the other hand, when you discover that you truly do need an architectural boundary where none exists, the costs and risks can be very high to add such a boundary.</p><blockquote><p>\u6240\u4EE5\u4F5C\u4E3A\u67B6\u6784\u5E08\uFF0C\u6211\u4EEC\u5E94\u8BE5\u600E\u4E48\u529E\uFF1F\u8FD9\u4E2A\u95EE\u9898\u6050\u6015\u6CA1\u6709\u7B54\u6848\u3002\u4E00\u65B9\u9762\uFF0C\u5C31\u50CF\u4E00\u4E9B\u5F88\u806A\u660E\u7684\u4EBA\u591A\u5E74\u6765\u4E00\u76F4\u544A\u8BC9\u6211\u4EEC\u7684\u90A3\u6837\uFF0C\u4E0D\u5E94\u8BE5\u5C06\u672A\u6765\u7684\u9700\u6C42\u62BD\u8C61\u5316\u3002\u8FD9\u5C31\u662F YAGNI \u539F\u5219\uFF1A\u201CYou aren&#39;t going to need it\u201D\uFF0C\u81C6\u60F3\u4E2D\u7684\u9700\u6C42\u4E8B\u5B9E\u4E0A\u4F4F\u5F80\u662F\u4E0D\u5B58\u5728\u7684\u3002\u8FD9\u662F\u4E00\u53E5\u9971\u542B\u667A\u6167\u7684\u5EFA\u8BAE\uFF0C\u56E0\u4E3A\u8FC7\u5EA6\u7684\u5DE5\u7A0B\u8BBE\u8BA1\u5F80\u5F80\u6BD4\u5DE5\u7A0B\u8BBE\u8BA1\u4E0D\u8DB3\u8FD8\u8981\u7CDF\u7CD5\u3002\u4F46\u53E6\u4E00\u65B9\u9762\uFF0C\u5982\u679C\u6211\u4EEC\u53D1\u73B0\u81EA\u5DF1\u5728\u67D0\u4E2A\u4F4D\u7F6E\u786E\u5B9E\u9700\u8981\u8BBE\u7F6E\u67B6\u6784\u8FB9\u754C\uFF0C\u5374\u53C8\u6CA1\u6709\u4E8B\u5148\u51C6\u5907\u7684\u65F6\u5019\uFF0C\u518D\u6DFB\u52A0\u8FB9\u754C\u6240\u9700\u8981\u7684\u6210\u672C\u548C\u98CE\u9669\u5F80\u5F80\u662F\u5F88\u9AD8\u7684\u3002</p></blockquote><p>So there you have it. O Software Architect, you must see the future. You must guess\u2014intelligently. You must weigh the costs and determine where the architectural boundaries lie, and which should be fully implemented, and which should be partially implemented, and which should be ignored.</p><blockquote><p>\u73B0\u5B9E\u5C31\u662F\u8FD9\u6837\u3002\u4F5C\u4E3A\u8F6F\u4EF6\u67B6\u6784\u5E08\uFF0C\u6211\u4EEC\u5FC5\u987B\u6709\u4E00\u70B9\u672A\u535C\u5148\u77E5\u7684\u80FD\u529B\u3002\u6709\u65F6\u5019\u8981\u4F9D\u9760\u731C\u6D4B\u2014\u2014\u5F53\u7136\u8FD8\u8981\u7528\u70B9\u8111\u5B50\u3002\u8F6F\u4EF6\u67B6\u6784\u5E08\u5FC5\u987B\u4ED4\u7EC6\u6743\u8861\u6210\u672C\uFF0C\u51B3\u5B9A\u54EA\u91CC\u9700\u8981\u8BBE\u8BA1\u67B6\u6784\u8FB9\u754C\uFF0C\u4EE5\u53CA\u8FD9\u4E9B\u5730\u65B9\u9700\u8981\u7684\u662F\u5B8C\u6574\u7684\u8FB9\u754C\uFF0C\u8FD8\u662F\u4E0D\u5B8C\u5168\u7684\u8FB9\u754C\uFF0C\u8FD8\u662F\u53EF\u4EE5\u5FFD\u7565\u7684\u8FB9\u754C\u3002</p></blockquote><p>But this is not a one-time decision. You don\u2019t simply decide at the start of a project which boundaries to implement and which to ignore. Rather, you watch. You pay attention as the system evolves. You note where boundaries may be required, and then carefully watch for the first inkling of friction because those boundaries don\u2019t exist.</p><blockquote><p>\u800C\u4E14\uFF0C\u8FD9\u4E0D\u662F\u4E00\u6B21\u6027\u7684\u51B3\u5B9A\u3002\u6211\u4EEC\u4E0D\u80FD\u5728\u9879\u76EE\u5F00\u59CB\u65F6\u5C31\u51B3\u5B9A\u597D\u54EA\u91CC\u9700\u8981\u8FB9\u754C\uFF0C\u54EA\u91CC\u4E0D\u9700\u8981\u3002\u76F8\u53CD\uFF0C\u67B6\u6784\u5E08\u5FC5\u987B\u6301\u7EED\u89C2\u5BDF\u7CFB\u7EDF\u7684\u6F14\u8FDB\uFF0C\u65F6\u523B\u6CE8\u610F\u54EA\u91CC\u53EF\u80FD\u9700\u8981\u8BBE\u8BA1\u8FB9\u754C\uFF0C\u7136\u540E\u4ED4\u7EC6\u89C2\u5BDF\u8FD9\u4E9B\u5730\u65B9\u4F1A\u7531\u4E8E\u4E0D\u5B58\u5728\u8FB9\u754C\u800C\u51FA\u73B0\u54EA\u4E9B\u95EE\u9898\u3002</p></blockquote><p>At that point, you weigh the costs of implementing those boundaries versus the cost of ignoring them\u2014and you review that decision frequently. Your goal is to implement the boundaries right at the inflection point where the cost of implementing becomes less than the cost of ignoring.</p><blockquote><p>\u5F53\u51FA\u73B0\u95EE\u9898\u65F6\uFF0C\u6211\u4EEC\u8FD8\u9700\u8981\u6743\u8861\u4E00\u4E0B\u5B9E\u73B0\u8FD9\u4E2A\u8FB9\u754C\u7684\u6210\u672C\uFF0C\u5E76\u62FF\u5B83\u4E0E\u4E0D\u5B9E\u73B0\u8FD9\u4E2A\u8FB9\u754C\u7684\u6210\u672C\u5BF9\u6BD4\u2014\u2014\u8FD9\u79CD\u5BF9\u6BD4\u7ECF\u5E38\u9700\u8981\u53CD\u590D\u5730\u8FDB\u884C\u3002\u6211\u4EEC\u7684\u76EE\u6807\u662F\u627E\u5230\u8BBE\u7F6E\u8FB9\u754C\u7684\u4F18\u52BF\u8D85\u8FC7\u5176\u6210\u672C\u7684\u62D0\u70B9\uFF0C\u90A3\u5C31\u662F\u5B9E\u73B0\u8BE5\u8FB9\u754C\u7684\u6700\u4F73\u65F6\u673A\u3002</p></blockquote><p>It takes a watchful eye.</p><blockquote><p>\u6301\u4E4B\u4EE5\u6052\uFF0C\u4E00\u523B\u4E5F\u4E0D\u80FD\u653E\u677E\u3002</p></blockquote>',15);function N(H,C){const a=r("Figures");return h(),l("div",null,[c,o(a,{figure:"25-1"},{default:n(()=>[d]),_:1}),p,m,g,b,o(a,{figure:"25-2"},{default:n(()=>[y]),_:1}),f,w,k,v,_,I,q,o(a,{figure:"25-3"},{default:n(()=>[T]),_:1}),A,o(a,{figure:"25-4"},{default:n(()=>[x]),_:1}),P,o(a,{figure:"25-5"},{default:n(()=>[R]),_:1}),G,o(a,{figure:"25-6"},{default:n(()=>[L]),_:1}),S,M,F,U,E,W,o(a,{figure:"25-7"},{default:n(()=>[D]),_:1}),B])}const z=i(u,[["render",N],["__file","ch25.html.vue"]]);export{z as default};
