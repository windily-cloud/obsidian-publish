import{_ as l}from"./plugin-vue_export-helper-c27b6911.js";import{r as c,o as t,c as r,a as e,b as n,d as i,e as s}from"./app-8204f1b7.js";const o={},p=s('<h1 id="关系图谱" tabindex="-1"><a class="header-anchor" href="#关系图谱" aria-hidden="true">#</a> 关系图谱</h1><h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述" aria-hidden="true">#</a> 概述</h2><p>关系图谱显示了你笔记之间的 [[内部链接]]。笔记被链接得越多，图谱上对应的节点就越大。</p><figure><img src="https://cdn.pkmer.cn/images/bd58a9b1a784c104507f543f372be784_MD5.png!pkmer" alt="Pasted image 10.png" tabindex="0" loading="lazy"><figcaption>Pasted image 10.png</figcaption></figure><ul><li>鼠标悬停在某个节点上时能够高亮该节点及其相关的链接。这能让你快速看清与该笔记相关的东西。</li><li>你可以通过拖动节点来调整图谱。这能让你更好地看清笔记间的连接。</li><li>你可以通过鼠标滚轮或  <code>+</code> 、<code>-</code>  键来放大缩小图谱。</li><li>你可以通过鼠标拖动图谱背景的方式，或是使用方向键来移动图谱。</li><li>使用方向键时，按住  <code>Shift</code>  能让操作更快。</li></ul><h2 id="图谱生成原理" tabindex="-1"><a class="header-anchor" href="#图谱生成原理" aria-hidden="true">#</a> 图谱生成原理</h2><p>这图谱最被人诟病的就是华而不实，但事实真的如此吗？从图谱生成原理我找到了一些我认为不错的用法，在下一节介绍。</p><p>图谱的生成其实非常简单：把文档，附件和标签抽象成一个点，并标注上名称；把所有文档内的双链抽象成一段有向连线；</p><p>其中可调节的选项有：</p><ol><li>用于生成的文档：按文件路径，文件名，标签，含关键字的行，块，筛选文档进行显示</li><li>给点着色：按文件路径，文件名，标签，含关键字的行，块，筛选文档进行着色</li><li>调节图谱生成属性：节点大小，力度，距离，连线长度，文本显示的阈值</li></ol><p>根据图谱的生成原理，其表征的无非是：<strong>特定文件的文件名之间的关系</strong>。</p><h2 id="图谱的应用" tabindex="-1"><a class="header-anchor" href="#图谱的应用" aria-hidden="true">#</a> 图谱的应用</h2><p>以下应用都以 Pkmer-Docs 来举例，其全局关系图谱如下所示：</p><figure><img src="https://cdn.pkmer.cn/images/20230525104002.png!pkmer" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure><p>目前大概只有 300 篇文章，但通过图谱发现，能优化的地方非常多。下面仅展示我比较常用的使用方式：</p><ol><li>清除无效链接</li><li>全局发现</li><li>发现内容并整合笔记</li><li>kg 笔记法</li></ol>',16),d={href:"https://github.com/HEmile/juggl",target:"_blank",rel:"noopener noreferrer"},g={href:"https://github.com/SkepticMystic/graph-analysis",target:"_blank",rel:"noopener noreferrer"},h=s(`<h3 id="清除无效链接" tabindex="-1"><a class="header-anchor" href="#清除无效链接" aria-hidden="true">#</a> 清除无效链接</h3><figure><img src="https://cdn.pkmer.cn/images/20230525104720.png!pkmer" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure><p>这里有一个小黑点，这是我们批量将图片上传到图床时产生的，图片上传没成功，但是图片被删除了。如果没有图谱，需要在所有文件中挨个儿翻，或者碰到了再修改，但拖得久了很容易导致的问题是忘记了这张图片是什么。</p><p>同样的，在图中有些被删除的笔记，却依然有链接。这直接影响是，在发布后用户点击会跳转到 404 页面，非常影响用户体验。对于仅自己使用的情况，笔记会产生大量无效的链接，也非常影响体验。</p><p>如果没有图谱，我能想到的办法就只有一篇篇笔记翻，检查每个链接的有效性，显然这是不可接受的。</p><h3 id="全局发现" tabindex="-1"><a class="header-anchor" href="#全局发现" aria-hidden="true">#</a> 全局发现</h3><p>上述内容基于局部图谱，有些时候全局图谱能带给我们更多的灵感，通过颜色标识出来，我们现在 group 一下 CSS 关键字：</p><figure><img src="https://cdn.pkmer.cn/images/20230525112408.png!pkmer" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure><p>单从这个角度出发，我们可以写一篇 CSS 文章，直接用 [[obsidian-hover-editor]] 从图谱中复制内容到笔记中，正如我此时开着数个相关笔记的窗口在写这篇文章</p><figure><img src="https://cdn.pkmer.cn/images/20230525114108.png!pkmer" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure><h3 id="发现内容并整合笔记" tabindex="-1"><a class="header-anchor" href="#发现内容并整合笔记" aria-hidden="true">#</a> 发现内容并整合笔记</h3><figure><img src="https://cdn.pkmer.cn/images/20230525105457.png!pkmer" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure><p>如图，我们通过路径筛选，找到社区插件文件夹下的所有笔记，可以很清晰的发现还有两个插件并没有链接到我们 <code>Obsidian社区插件</code> 这个文档中。这是非常重要的！因为如果有孤儿文件，那么它仅能被搜索搜到 (文件树现在有 150 多个文件，很难找)，没有链接，我们将大大降低看到它的几率。通过图谱，我们至少能保证它被链接到了一个文件，以此完善 <code>Obsidian社区插件</code> 这个内容。</p><p>现在我们限定搜索关键字为图谱：</p><figure><img src="https://cdn.pkmer.cn/images/20230525110730.png!pkmer" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure><p>我看到这篇图谱有下列疑问：</p><ol><li>图谱关 obsidian-admonition 啥事？</li><li><code>2022-11-26-ObsidianRoundup</code> 以及 <code>2023-01-211-ObsidianRoundup</code> 应该有关于图谱的更新和使用方法的内容，我可以在我这篇笔记写一点关于 Obsidian 图谱的更新日志和使用方法分享。</li><li>里面提到了知识图谱，Obsidian 的图谱和知识图谱显然不一样，可以写点内容作为区分。我记得 KG 笔记法就是通过修改文件名的方式建立三元组，以此实现类知识图谱的应用</li></ol><p>当然，还有很多可供挖掘的地方，我就不详细说了。</p><h3 id="kg-笔记法" tabindex="-1"><a class="header-anchor" href="#kg-笔记法" aria-hidden="true">#</a> kg 笔记法</h3><p>[[基于知识图谱的KG笔记法]] 详细介绍和展示了如何通过标题实现类似知识图谱的功能，相当于在链接中加上关键字。</p><figure><img src="https://cdn.pkmer.cn/images/d6637e5b661dc348d7d86a02abd070cd_MD5.png!pkmer" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure><h2 id="自定义外观" tabindex="-1"><a class="header-anchor" href="#自定义外观" aria-hidden="true">#</a> 自定义外观</h2><p>由于关系图谱是使用  <code>&lt;canvas&gt;</code>  和 WebGL 渲染的，因此 [[自定义CSS]] 无法改变图谱中节点和连线的外观。为了让你能自定义图谱外观，我们提供了一种将 CSS 转换为 WebGL 命令的方法。</p><h3 id="调整图谱外观请使用以下-css-类" tabindex="-1"><a class="header-anchor" href="#调整图谱外观请使用以下-css-类" aria-hidden="true">#</a> 调整图谱外观请使用以下 CSS 类</h3><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>.graph-view.color-fill
.graph-view.color-fill-tag (theme-dependent)
.graph-view.color-fill-attachment (theme-dependent)
.graph-view.color-arrow
.graph-view.color-circle
.graph-view.color-line
.graph-view.color-text
.graph-view.color-fill-highlight
.graph-view.color-line-highlight
.graph-view.color-fill-unresolved
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>需要注意，有些类是独立于基础颜色模式的。这意味着你需要在其前面添加  <code>.theme-dark</code>  或  <code>.theme-light</code>，使其能够在不同颜色模式下使用。</p><h3 id="支持的-css-语法" tabindex="-1"><a class="header-anchor" href="#支持的-css-语法" aria-hidden="true">#</a> 支持的 CSS 语法</h3><div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.graph-view.color-class</span> <span class="token punctuation">{</span>
    <span class="token comment">/* 支持所有 css 颜色指令，如 #HEX, rgb and rgba */</span>
    <span class="token property">color</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>
    <span class="token property">color</span><span class="token punctuation">:</span> #ffffff<span class="token punctuation">;</span>
    <span class="token property">color</span><span class="token punctuation">:</span> <span class="token function">rgb</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token property">color</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 1<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">/* 透明度（类似于RGBA）将使颜色透明 */</span>
    <span class="token property">opacity</span><span class="token punctuation">:</span> 0.5<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="修改" tabindex="-1"><a class="header-anchor" href="#修改" aria-hidden="true">#</a> 修改</h3>`,29),u={href:"https://developer.mozilla.org/en-US/docs/Web/CSS/Specificity",target:"_blank",rel:"noopener noreferrer"},m=e("code",null,".color-fill-tag",-1),v=e("code",null,".color-fill-attachment",-1),f=e("code",null,"!important",-1),b=s(`<div class="language-css line-numbers-mode" data-ext="css"><pre class="language-css"><code><span class="token selector">.graph-view.color-fill,
.theme-dark .graph-view.color-fill-tag,
.theme-light .graph-view.color-fill-tag,
.theme-dark .graph-view.color-fill-attachment,
.theme-light .graph-view.color-fill-attachment,
.graph-view.color-arrow,
.graph-view.color-circle,
.graph-view.color-line,
.graph-view.color-text,
.graph-view.color-fill-highlight,
.graph-view.color-line-highlight,
.graph-view.color-fill-unresolved</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function k(_,x){const a=c("ExternalLinkIcon");return t(),r("div",null,[p,e("p",null,[n("除此之外，利用一些关系图谱插件如 "),e("a",d,[n("juggl"),i(a)]),n("，"),e("a",g,[n("graph-analysis"),i(a)]),n("，等实现更多功能和用法，我并没有深入探索。")]),h,e("p",null,[n("这些是 Obsidian 支持的默认语法。你可以使用相同的或 "),e("a",u,[n("更特殊的语法"),i(a)]),n(" 替换它们。特别是  "),m,n("  和  "),v,n("。作为最后的选择，请在你代码的末尾加上  "),f,n("。")]),b])}const y=l(o,[["render",k],["__file","关系图谱.html.vue"]]);export{y as default};
