import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as s,c as a,e as t}from"./app.887b133c.js";const p={},e=t(`<h1 id="chap26-the-main-component-main-\u7EC4\u4EF6" tabindex="-1"><a class="header-anchor" href="#chap26-the-main-component-main-\u7EC4\u4EF6" aria-hidden="true">#</a> Chap26. THE MAIN COMPONENT Main \u7EC4\u4EF6</h1><p>In every system, there is at least one component that creates, coordinates, and oversees the others. I call this component Main.</p><blockquote><p>\u5728\u6240\u6709\u7684\u7CFB\u7EDF\u4E2D\uFF0C\u90FD\u81F3\u5C11\u8981\u6709\u4E00\u4E2A\u7EC4\u4EF6\u6765\u8D1F\u8D23\u521B\u5EFA\u3001\u534F\u8C03\u3001\u76D1\u7763\u5176\u4ED6\u7EC4\u4EF6\u7684\u8FD0\u8F6C\u3002\u6211\u4EEC\u5C06\u5176\u79F0\u4E3A Main \u7EC4\u4EF6\u3002</p></blockquote><h2 id="the-ultimate-detail-\u6700\u7EC6\u8282\u5316\u7684\u90E8\u5206" tabindex="-1"><a class="header-anchor" href="#the-ultimate-detail-\u6700\u7EC6\u8282\u5316\u7684\u90E8\u5206" aria-hidden="true">#</a> THE ULTIMATE DETAIL \u6700\u7EC6\u8282\u5316\u7684\u90E8\u5206</h2><p>The Main component is the ultimate detail\u2014the lowest-level policy. It is the initial entry point of the system. Nothing, other than the operating system, depends on it. Its job is to create all the Factories, Strategies, and other global facilities, and then hand control over to the high-level abstract portions of the system.</p><blockquote><p>Main \u7EC4\u4EF6\u662F\u7CFB\u7EDF\u4E2D\u6700\u7EC6\u8282\u5316\u7684\u90E8\u5206\u2014\u2014\u4E5F\u5C31\u662F\u5E95\u5C42\u7684\u7B56\u7565\uFF0C\u5B83\u662F\u6574\u4E2A\u7CFB\u7EDF\u7684\u521D\u59CB\u70B9\u3002\u5728\u6574\u4E2A\u7CFB\u7EDF\u4E2D\uFF0C\u9664\u4E86\u64CD\u4F5C\u7CFB\u7EDF\u4E0D\u4F1A\u518D\u6709\u5176\u4ED6\u7EC4\u4EF6\u4F9D\u8D56\u4E8E\u5B83\u4E86\u3002Main \u7EC4\u4EF6\u7684\u4EFB\u52A1\u662F\u521B\u5EFA\u6240\u6709\u7684\u5DE5\u5382\u7C7B\u3001\u7B56\u7565\u7C7B\u4EE5\u53CA\u5176\u4ED6\u7684\u5168\u5C40\u8BBE\u65BD\uFF0C\u5E76\u6700\u7EC8\u5C06\u7CFB\u7EDF\u7684\u63A7\u5236\u6743\u8F6C\u4EA4\u7ED9\u6700\u9AD8\u62BD\u8C61\u5C42\u7684\u4EE3\u7801\u6765\u5904\u7406\u3002</p></blockquote><p>It is in this Main component that dependencies should be injected by a Dependency Injection framework. Once they are injected into Main, Main should distribute those dependencies normally, without using the framework.</p><blockquote><p>Main \u7EC4\u4EF6\u4E2D\u7684\u4F9D\u8D56\u5173\u7CFB\u901A\u5E38\u5E94\u8BE5\u7531\u4F9D\u8D56\u6CE8\u5165\u6846\u67B6\u6765\u6CE8\u5165\u3002\u5728\u8BE5\u6846\u67B6\u5C06\u4F9D\u8D56\u5173\u7CFB\u6CE8\u5165\u5230 Main \u7EC4\u4EF6\u4E4B\u540E\uFF0CMain \u7EC4\u4EF6\u5C31\u5E94\u8BE5\u53EF\u4EE5\u5728\u4E0D\u4F9D\u8D56\u4E8E\u8BE5\u6846\u67B6\u7684\u60C5\u51B5\u4E0B\u81EA\u884C\u5206\u914D\u8FD9\u4E9B\u4F9D\u8D56\u5173\u7CFB\u4E86\u3002</p></blockquote><p>Think of Main as the dirtiest of all the dirty components.</p><blockquote><p>\u8BF7\u8BB0\u4F4F\uFF0CMain \u7EC4\u4EF6\u662F\u6574\u4E2A\u7CFB\u7EDF\u4E2D\u7EC6\u8282\u4FE1\u606F\u6700\u591A\u7684\u7EC4\u4EF6\u3002</p></blockquote><p>Consider the following Main component from a recent version of Hunt the Wumpus. Notice how it loads up all the strings that we don\u2019t want the main body of the code to know about.</p><blockquote><p>\u4E0B\u9762\uFF0C\u6211\u4EEC\u6765\u770B\u4E00\u4E0B\u6700\u65B0\u7248 Hunt the Wumpus \u6E38\u620F\u7684 Main \u7EC4\u4EF6\u3002\u8BF7\u6CE8\u610F\u8FD9\u91CC\u52A0\u8F7D\u5B57\u7B26\u4E32\u7684\u65B9\u6CD5\uFF0C\u8FD9\u4E9B\u5B57\u7B26\u4E32\u5168\u90FD\u662F\u6211\u4EEC\u4E0D\u60F3\u8BA9\u6E38\u620F\u4E3B\u4F53\u4EE3\u7801\u4E86\u89E3\u7684\u5185\u5BB9\u3002</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token keyword">implements</span> <span class="token class-name">HtwMessageReceiver</span> <span class="token punctuation">{</span>
  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">HuntTheWumpus</span> game<span class="token punctuation">;</span>
  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">int</span> hitPoints <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> caverns <span class="token operator">=</span> <span class="token keyword">new</span>   <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> environments <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span>
    <span class="token string">&quot;bright&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;humid&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;dry&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;creepy&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;ugly&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;foggy&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;hot&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;cold&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;drafty&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;dreadful&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> shapes <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
    <span class="token string">&quot;round&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;square&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;oval&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;irregular&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;long&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;craggy&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;rough&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;tall&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;narrow&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> cavernTypes <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
    <span class="token string">&quot;cavern&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;room&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;chamber&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;catacomb&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;crevasse&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;cell&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;tunnel&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;passageway&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;hall&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;expanse&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> adornments <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
   <span class="token string">&quot;smelling of sulfur&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;with engravings on the walls&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;with a bumpy floor&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;littered with garbage&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;spattered with guano&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;with piles of Wumpus droppings&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;with bones scattered around&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;with a corpse on the floor&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;that seems to vibrate&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;that feels stuffy&quot;</span><span class="token punctuation">,</span>
    <span class="token string">&quot;that fills you with dread&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Now here\u2019s the main function. Notice how it uses the HtwFactory to create the game. It passes in the name of the class, htw.game.HuntTheWumpusFacade, because that class is even dirtier than Main. This prevents changes in that class from causing Main to recompile/redeploy.</p><blockquote><p>\u63A5\u4E0B\u6765\u662F main \u51FD\u6570\u3002\u8BF7\u6CE8\u610F\u8FD9\u91CC\u662F\u5982\u4F55\u4F7F\u7528 HtwFactory \u6765\u6784\u5EFA\u8FD9\u4E2A\u6E38\u620F\u7684\u3002\u6211\u4EEC\u53EF\u4EE5\u770B\u5230\u8FD9\u91CC\u4F20\u5165\u4E86 \u4E00\u4E2A\u540D\u4E3A <code>htw.game.HuntTheWumpusFacade</code> \u7684\u7C7B\u3002\u7531\u4E8E\u8FD9\u4E2A\u7C7B\u4E2D\u7684\u7EC6\u8282\u4FE1\u606F\u6BD4 Main \u7EC4\u4EF6\u8FD8\u591A\uFF0C\u53D8\u66F4\u4E5F\u66F4\u9891\u7E41\uFF0C\u56E0\u6B64\u8FD9\u6837\u505A\u53EF\u4EE5\u907F\u514D\u8FD9\u4E2A\u7C7B\u7684\u53D8\u66F4\u5BFC\u81F4 Main \u7EC4\u4EF6\u7684\u91CD\u65B0\u7F16\u8BD1\u548C\u91CD\u65B0\u90E8\u7F72\u3002</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
   game <span class="token operator">=</span> <span class="token class-name">HtwFactory</span><span class="token punctuation">.</span><span class="token function">makeGame</span><span class="token punctuation">(</span><span class="token string">&quot;htw.game.HuntTheWumpusFacade&quot;</span><span class="token punctuation">,</span>
                                 <span class="token keyword">new</span> <span class="token class-name">Main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token function">createMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token class-name">BufferedReader</span> br <span class="token operator">=</span>
     <span class="token keyword">new</span> <span class="token class-name">BufferedReader</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">InputStreamReader</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>in<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   game<span class="token punctuation">.</span><span class="token function">makeRestCommand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>game<span class="token punctuation">.</span><span class="token function">getPlayerCavern</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Health: &quot;</span> <span class="token operator">+</span> hitPoints <span class="token operator">+</span> <span class="token string">&quot; arrows: &quot;</span> <span class="token operator">+</span>
                           game<span class="token punctuation">.</span><span class="token function">getQuiver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token class-name">HuntTheWumpus<span class="token punctuation">.</span>Command</span> c <span class="token operator">=</span> game<span class="token punctuation">.</span><span class="token function">makeRestCommand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">String</span> command <span class="token operator">=</span> br<span class="token punctuation">.</span><span class="token function">readLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>command<span class="token punctuation">.</span><span class="token function">equalsIgnoreCase</span><span class="token punctuation">(</span><span class="token string">&quot;e&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        c <span class="token operator">=</span> game<span class="token punctuation">.</span><span class="token function">makeMoveCommand</span><span class="token punctuation">(</span><span class="token constant">EAST</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>command<span class="token punctuation">.</span><span class="token function">equalsIgnoreCase</span><span class="token punctuation">(</span><span class="token string">&quot;w&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        c <span class="token operator">=</span> game<span class="token punctuation">.</span><span class="token function">makeMoveCommand</span><span class="token punctuation">(</span><span class="token constant">WEST</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>command<span class="token punctuation">.</span><span class="token function">equalsIgnoreCase</span><span class="token punctuation">(</span><span class="token string">&quot;n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        c <span class="token operator">=</span> game<span class="token punctuation">.</span><span class="token function">makeMoveCommand</span><span class="token punctuation">(</span><span class="token constant">NORTH</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>command<span class="token punctuation">.</span><span class="token function">equalsIgnoreCase</span><span class="token punctuation">(</span><span class="token string">&quot;s&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        c <span class="token operator">=</span> game<span class="token punctuation">.</span><span class="token function">makeMoveCommand</span><span class="token punctuation">(</span><span class="token constant">SOUTH</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>command<span class="token punctuation">.</span><span class="token function">equalsIgnoreCase</span><span class="token punctuation">(</span><span class="token string">&quot;r&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        c <span class="token operator">=</span> game<span class="token punctuation">.</span><span class="token function">makeRestCommand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>command<span class="token punctuation">.</span><span class="token function">equalsIgnoreCase</span><span class="token punctuation">(</span><span class="token string">&quot;sw&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        c <span class="token operator">=</span> game<span class="token punctuation">.</span><span class="token function">makeShootCommand</span><span class="token punctuation">(</span><span class="token constant">WEST</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>command<span class="token punctuation">.</span><span class="token function">equalsIgnoreCase</span><span class="token punctuation">(</span><span class="token string">&quot;se&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        c <span class="token operator">=</span> game<span class="token punctuation">.</span><span class="token function">makeShootCommand</span><span class="token punctuation">(</span><span class="token constant">EAST</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>command<span class="token punctuation">.</span><span class="token function">equalsIgnoreCase</span><span class="token punctuation">(</span><span class="token string">&quot;sn&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        c <span class="token operator">=</span> game<span class="token punctuation">.</span><span class="token function">makeShootCommand</span><span class="token punctuation">(</span><span class="token constant">NORTH</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>command<span class="token punctuation">.</span><span class="token function">equalsIgnoreCase</span><span class="token punctuation">(</span><span class="token string">&quot;ss&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        c <span class="token operator">=</span> game<span class="token punctuation">.</span><span class="token function">makeShootCommand</span><span class="token punctuation">(</span><span class="token constant">SOUTH</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>command<span class="token punctuation">.</span><span class="token function">equalsIgnoreCase</span><span class="token punctuation">(</span><span class="token string">&quot;q&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>

      c<span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Notice also that main creates the input stream and contains the main loop of the game, interpreting the simple input commands, but then defers all processing to other, higher-level components.</p><blockquote><p>\u4F60\u8FD8\u5E94\u8BE5\u6CE8\u610F\u5230 main \u51FD\u6570\u4E2D\u521B\u5EFA\u4E86\u8F93\u5165\u6570\u636E\u6D41\uFF0C\u5E76\u7EB3\u5165\u4E86\u6E38\u620F\u7684\u4E3B\u5FAA\u73AF\u3002\u4E3B\u5FAA\u73AF\u5C06\u8D1F\u8D23\u5904\u7406\u7B80\u5355\u7684\u8F93\u5165\u6307\u4EE4\uFF0C\u4F46\u5B83\u4F1A\u5C06\u5177\u4F53\u7684\u5904\u7406\u8FC7\u7A0B\u4EA4\u7ED9\u5176\u4ED6\u66F4\u9AD8\u5C42\u6B21\u7684\u7EC4\u4EF6\u6765\u5904\u7406\u3002</p></blockquote><p>Finally, notice that main creates the map.</p><blockquote><p>\u6700\u540E\uFF0CMain \u7EC4\u4EF6\u8FD8\u8981\u8D1F\u8D23\u751F\u6210\u6574\u4E2A\u6E38\u620F\u7684\u5730\u56FE\u3002</p></blockquote><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">createMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">int</span> nCaverns <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">30.0</span> <span class="token operator">+</span> <span class="token number">10.0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token keyword">while</span> <span class="token punctuation">(</span>nCaverns<span class="token operator">--</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
     caverns<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token function">makeName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">String</span> cavern <span class="token operator">:</span> caverns<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">maybeConnectCavern</span><span class="token punctuation">(</span>cavern<span class="token punctuation">,</span> <span class="token constant">NORTH</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">maybeConnectCavern</span><span class="token punctuation">(</span>cavern<span class="token punctuation">,</span> <span class="token constant">SOUTH</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">maybeConnectCavern</span><span class="token punctuation">(</span>cavern<span class="token punctuation">,</span> <span class="token constant">EAST</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">maybeConnectCavern</span><span class="token punctuation">(</span>cavern<span class="token punctuation">,</span> <span class="token constant">WEST</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token class-name">String</span> playerCavern <span class="token operator">=</span> <span class="token function">anyCavern</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    game<span class="token punctuation">.</span><span class="token function">setPlayerCavern</span><span class="token punctuation">(</span>playerCavern<span class="token punctuation">)</span><span class="token punctuation">;</span>
    game<span class="token punctuation">.</span><span class="token function">setWumpusCavern</span><span class="token punctuation">(</span><span class="token function">anyOther</span><span class="token punctuation">(</span>playerCavern<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    game<span class="token punctuation">.</span><span class="token function">addBatCavern</span><span class="token punctuation">(</span><span class="token function">anyOther</span><span class="token punctuation">(</span>playerCavern<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    game<span class="token punctuation">.</span><span class="token function">addBatCavern</span><span class="token punctuation">(</span><span class="token function">anyOther</span><span class="token punctuation">(</span>playerCavern<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    game<span class="token punctuation">.</span><span class="token function">addBatCavern</span><span class="token punctuation">(</span><span class="token function">anyOther</span><span class="token punctuation">(</span>playerCavern<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    game<span class="token punctuation">.</span><span class="token function">addPitCavern</span><span class="token punctuation">(</span><span class="token function">anyOther</span><span class="token punctuation">(</span>playerCavern<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    game<span class="token punctuation">.</span><span class="token function">addPitCavern</span><span class="token punctuation">(</span><span class="token function">anyOther</span><span class="token punctuation">(</span>playerCavern<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    game<span class="token punctuation">.</span><span class="token function">addPitCavern</span><span class="token punctuation">(</span><span class="token function">anyOther</span><span class="token punctuation">(</span>playerCavern<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    game<span class="token punctuation">.</span><span class="token function">setQuiver</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// much code removed\u2026</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>The point is that Main is a dirty low-level module in the outermost circle of the clean architecture. It loads everything up for the high level system, and then hands control over to it.</p><blockquote><p>\u6211\u4EEC\u5728\u8FD9\u91CC\u7684\u91CD\u70B9\u662F\u8981\u8BF4\u660E Main \u7EC4\u4EF6\u662F\u6574\u4E2A\u7CFB\u7EDF\u4E2D\u7684\u4E00\u4E2A\u5E95\u5C42\u6A21\u5757\uFF0C\u5B83\u5904\u4E8E\u6574\u6D01\u67B6\u6784\u7684\u6700\u5916\u5708\uFF0C\u4E3B\u8981\u8D1F\u8D23\u4E3A\u7CFB\u7EDF\u52A0\u8F7D\u6240\u6709\u5FC5\u8981\u7684\u4FE1\u606F\uFF0C\u7136\u540E\u518D\u5C06\u63A7\u5236\u6743\u8F6C\u4EA4\u56DE\u7CFB\u7EDF\u7684\u9AD8\u5C42\u7EC4\u4EF6\u3002</p></blockquote><h2 id="conclusion-\u672C\u7AE0\u5C0F\u7ED3" tabindex="-1"><a class="header-anchor" href="#conclusion-\u672C\u7AE0\u5C0F\u7ED3" aria-hidden="true">#</a> CONCLUSION \u672C\u7AE0\u5C0F\u7ED3</h2><p>Think of Main as a plugin to the application\u2014a plugin that sets up the initial conditions and configurations, gathers all the outside resources, and then hands control over to the high-level policy of the application. Since it is a plugin, it is possible to have many Main components, one for each configuration of your application.</p><blockquote><p>Main \u7EC4\u4EF6\u4E5F\u53EF\u4EE5\u88AB\u89C6\u4E3A\u5E94\u7528\u7A0B\u5E8F\u7684\u4E00\u4E2A\u63D2\u4EF6\u2014\u2014\u8FD9\u4E2A\u63D2\u4EF6\u8D1F\u8D23\u8BBE\u7F6E\u8D77\u59CB\u72B6\u6001\u3001\u914D\u7F6E\u4FE1\u606F\u3001\u52A0\u8F7D\u5916\u90E8\u8D44\u6E90\uFF0C\u6700\u540E\u5C06\u63A7\u5236\u6743\u8F6C\u4EA4\u7ED9\u5E94\u7528\u7A0B\u5E8F\u7684\u5176\u4ED6\u9AD8\u5C42\u7EC4\u4EF6\u3002\u53E6\u5916\uFF0C\u7531\u4E8E Main \u7EC4\u4EF6\u80FD\u4EE5\u63D2\u4EF6\u5F62\u5F0F\u5B58\u5728\u4E8E\u7CFB\u7EDF\u4E2D\uFF0C\u56E0\u6B64\u6211\u4EEC\u53EF\u4EE5\u4E3A\u4E00\u4E2A\u7CFB\u7EDF\u8BBE\u8BA1\u591A\u4E2A Main \u7EC4\u4EF6\uFF0C\u8BA9\u5B83\u4EEC\u5404\u81EA\u5BF9\u5E94\u4E8E\u4E0D\u540C\u7684\u914D\u7F6E\u3002</p></blockquote><p>For example, you could have a Main plugin for Dev, another for Test, and yet another for Production. You could also have a Main plugin for each country you deploy to, or each jurisdiction, or each customer.</p><blockquote><p>\u4F8B\u5982\uFF0C\u6211\u4EEC\u65E2\u53EF\u4EE5\u8BBE\u8BA1\u4E13\u95E8\u9488\u5BF9\u5F00\u53D1\u73AF\u5883\u7684 Main \u7EC4\u4EF6\uFF0C\u4E5F\u53EF\u4EE5\u8BBE\u8BA1\u4E13\u95E8\u9488\u5BF9\u6D4B\u8BD5\u7684\u6216\u8005\u751F\u4EA7\u73AF\u5883\u7684 Main \u7EC4\u4EF6\u3002\u9664\u6B64\u4E4B\u5916\uFF0C\u6211\u4EEC\u8FD8\u53EF\u4EE5\u9488\u5BF9\u8981\u90E8\u7F72\u7684\u56FD\u5BB6\u3001\u5730\u533A\u751A\u81F3\u5BA2\u6237\u8BBE\u8BA1\u4E0D\u540C\u7684 Main \u7EC4\u4EF6\u3002</p></blockquote><p>When you think about Main as a plugin component, sitting behind an architectural boundary, the problem of configuration becomes a lot easier to solve.</p><blockquote><p>\u5F53\u6211\u4EEC\u5C06 Main \u7EC4\u4EF6\u89C6\u4E3A\u4E00\u79CD\u63D2\u4EF6\u65F6\uFF0C\u7528\u67B6\u6784\u8FB9\u754C\u5C06\u5B83\u4E0E\u7CFB\u7EDF\u5176\u4ED6\u90E8\u5206\u9694\u79BB\u5F00\u8FD9\u4EF6\u4E8B\uFF0C\u5728\u7CFB\u7EDF\u7684\u914D\u7F6E\u4E0A\u662F\u4E0D\u662F\u5C31\u53D8\u5F97\u66F4\u5BB9\u6613\u4E86\u5462\uFF1F</p></blockquote>`,30),o=[e];function c(i,u){return s(),a("div",null,o)}const r=n(p,[["render",c],["__file","ch26.html.vue"]]);export{r as default};
